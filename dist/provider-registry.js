"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const atom_1 = require("atom");
class ProviderRegistry {
    constructor() {
        this.providers = [];
    }
    addProvider(provider) {
        this.providers.push(provider);
        return new atom_1.Disposable(() => this.removeProvider(provider));
    }
    removeProvider(provider) {
        const index = this.providers.indexOf(provider);
        if (index > -1)
            this.providers.splice(index, 1);
    }
    getAllProvidersForEditor(editor) {
        return this.providers.filter(provider => {
            return provider.isEditorSupported(editor);
        });
    }
    getFirstProviderForEditor(editor) {
        for (let provider of this.getAllProvidersForEditor(editor))
            return provider;
        return null;
    }
}
exports.default = ProviderRegistry;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXItcmVnaXN0cnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9saWIvcHJvdmlkZXItcmVnaXN0cnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBOEM7QUFJOUMsTUFBcUIsZ0JBQWdCO0lBQXJDO1FBQ0UsY0FBUyxHQUFvQixFQUFFLENBQUM7SUF1QmxDLENBQUM7SUFyQkMsV0FBVyxDQUFDLFFBQWtCO1FBQzVCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzlCLE9BQU8sSUFBSSxpQkFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUM3RCxDQUFDO0lBRUQsY0FBYyxDQUFDLFFBQWtCO1FBQy9CLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQy9DLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztZQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRUQsd0JBQXdCLENBQUMsTUFBa0I7UUFDekMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUN0QyxPQUFPLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM1QyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCx5QkFBeUIsQ0FBQyxNQUFrQjtRQUMxQyxLQUFLLElBQUksUUFBUSxJQUFJLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxNQUFNLENBQUM7WUFDeEQsT0FBTyxRQUFRLENBQUM7UUFDbEIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBQ0Y7QUF4QkQsbUNBd0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlzcG9zYWJsZSwgVGV4dEVkaXRvciB9IGZyb20gJ2F0b20nO1xuaW1wb3J0IHR5cGUgeyBGaW5kUmVmZXJlbmNlc1Byb3ZpZGVyIH0gZnJvbSAnLi9maW5kLXJlZmVyZW5jZXMuZCc7XG5pbXBvcnQgKiBhcyBjb25zb2xlIGZyb20gJy4vY29uc29sZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb3ZpZGVyUmVnaXN0cnk8UHJvdmlkZXIgZXh0ZW5kcyBGaW5kUmVmZXJlbmNlc1Byb3ZpZGVyPiB7XG4gIHByb3ZpZGVyczogQXJyYXk8UHJvdmlkZXI+ID0gW107XG5cbiAgYWRkUHJvdmlkZXIocHJvdmlkZXI6IFByb3ZpZGVyKTogRGlzcG9zYWJsZSB7XG4gICAgdGhpcy5wcm92aWRlcnMucHVzaChwcm92aWRlcik7XG4gICAgcmV0dXJuIG5ldyBEaXNwb3NhYmxlKCgpID0+IHRoaXMucmVtb3ZlUHJvdmlkZXIocHJvdmlkZXIpKTtcbiAgfVxuXG4gIHJlbW92ZVByb3ZpZGVyKHByb3ZpZGVyOiBQcm92aWRlcikge1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5wcm92aWRlcnMuaW5kZXhPZihwcm92aWRlcik7XG4gICAgaWYgKGluZGV4ID4gLTEpIHRoaXMucHJvdmlkZXJzLnNwbGljZShpbmRleCwgMSk7XG4gIH1cblxuICBnZXRBbGxQcm92aWRlcnNGb3JFZGl0b3IoZWRpdG9yOiBUZXh0RWRpdG9yKTogSXRlcmFibGU8UHJvdmlkZXI+IHtcbiAgICByZXR1cm4gdGhpcy5wcm92aWRlcnMuZmlsdGVyKHByb3ZpZGVyID0+IHtcbiAgICAgIHJldHVybiBwcm92aWRlci5pc0VkaXRvclN1cHBvcnRlZChlZGl0b3IpO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0Rmlyc3RQcm92aWRlckZvckVkaXRvcihlZGl0b3I6IFRleHRFZGl0b3IpOiBQcm92aWRlciB8IG51bGwge1xuICAgIGZvciAobGV0IHByb3ZpZGVyIG9mIHRoaXMuZ2V0QWxsUHJvdmlkZXJzRm9yRWRpdG9yKGVkaXRvcikpXG4gICAgICByZXR1cm4gcHJvdmlkZXI7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cbiJdfQ==